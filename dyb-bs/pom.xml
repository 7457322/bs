<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <packaging>pom</packaging>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <c3p0.version>0.9.1.2</c3p0.version>
        <mysql.version>5.1.38</mysql.version>
        <jackson-core.version>2.8.4</jackson-core.version>
        <jstl.version>1.2</jstl.version>
        <log4j.version>2.6.2</log4j.version>
        <mybatis.version>3.4.1</mybatis.version>
        <mybatis-spring.version>1.3.0</mybatis-spring.version>
        <servlet-api.version>3.1.0</servlet-api.version>
        <spring.version>4.3.1.RELEASE</spring.version>
        <commons-fileupload.version>1.3.2</commons-fileupload.version>
        <commons-logging.version>1.2</commons-logging.version>
        <druid.version>1.0.22</druid.version>
        <aspectjweaver.version>1.8.9</aspectjweaver.version>
        <httpclient.version>4.5.2</httpclient.version>
        <fastjson.version>1.2.13</fastjson.version>
        <guava.version>21.0</guava.version>

        <slf4j.version>2.0.5</slf4j.version>
        <dom4j.version>1.6.1</dom4j.version>
        <jaxen.version>1.1.1</jaxen.version>
        <plexusutils.version>1.1.1</plexusutils.version>
        <!-- 指明使用JDK7 -->
        <java-version>1.8</java-version>
    </properties>

    <groupId>bs</groupId>
    <artifactId>bs</artifactId>
    <version>1.0.0</version>

    <modules>
        <module>bs-common</module>
    </modules>

    <!--聚合依懒-->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-reload4j</artifactId>
                <version>${slf4j.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>dom4j</groupId>
                <artifactId>dom4j</artifactId>
                <version>${dom4j.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>jaxen</groupId>
                <artifactId>jaxen</artifactId>
                <version>${jaxen.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.codehaus.plexus</groupId>
                <artifactId>plexus-utils</artifactId>
                <version>${plexusutils.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>bs.common</groupId>
            <artifactId>bs-common</artifactId>
            <version>1.0.0</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.plexus</groupId>
            <artifactId>plexus-utils</artifactId>
            <version>3.0.8</version>
        </dependency>
    </dependencies>

    <build>
        <!-- mvn versions:set -DnewVersion=1.1.9.7 versions:commit -->
        <plugins>
            <plugin>
                <!-- 指定maven编译的jdk版本,如果不指定,maven3默认用jdk 1.5 maven2默认用jdk1.3 -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <!-- 一般而言，target与source是保持一致的，但是，有时候为了让程序能在其他版本的jdk中运行(对于低版本目标jdk，源代码中不能使用低版本jdk中不支持的语法)，会存在target不同于source的情况 -->
                    <source>${java-version}</source> <!-- 源代码使用的JDK版本 -->
                    <target>${java-version}</target> <!-- 需要生成的目标class文件的编译版本 -->
                    <encoding>UTF-8</encoding><!-- 字符集编码 -->
                    <verbose>true</verbose>
                    <showWarnings>true</showWarnings>
<!--                    <fork>true</fork>&lt;!&ndash; 要使compilerVersion标签生效，还需要将fork设为true，用于明确表示编译版本配置的可用 &ndash;&gt;-->
<!--                    <executable>&lt;!&ndash; path-to-javac &ndash;&gt;</executable>&lt;!&ndash; 使用指定的javac命令，例如：<executable>${JAVA_1_4_HOME}/bin/javac</executable> &ndash;&gt;-->
<!--                    <compilerVersion>1.3</compilerVersion>&lt;!&ndash; 指定插件将使用的编译器的版本 &ndash;&gt;-->
                    <meminitial>128m</meminitial><!-- 编译器使用的初始内存 -->
                    <maxmem>512m</maxmem><!-- 编译器使用的最大内存 -->
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.3.0</version>
                <configuration>
                    <attach>true</attach>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>2.16.0</version>
            </plugin>
        </plugins>
    </build>
</project>